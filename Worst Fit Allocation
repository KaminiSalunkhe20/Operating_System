#include <stdio.h>

void worstFit(int blockSize[], int m, int processSize[], int n) {
    int allocation[n];
    for (int i = 0; i < n; i++) allocation[i] = -1;

    for (int i = 0; i < n; i++) {
        int worstIdx = -1;
        for (int j = 0; j < m; j++) {
            if (blockSize[j] >= processSize[i]) {
                if (worstIdx == -1 || blockSize[j] > blockSize[worstIdx]) {
                    worstIdx = j;
                }
            }
        }

        if (worstIdx != -1) {
            allocation[i] = worstIdx;
            blockSize[worstIdx] -= processSize[i];
        }
    }

    printf("\n--- Worst Fit Allocation Result ---\n");
    printf("Process No.\tProcess Size\tBlock No.\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t\t%d\t\t", i + 1, processSize[i]);
        if (allocation[i] != -1)
            printf("%d\n", allocation[i] + 1);  // +1 for user-friendly block number
        else
            printf("Not Allocated\n");
    }
}

int main() {
    int m, n;

    // Input number of memory blocks
    printf("Enter the number of memory blocks: ");
    scanf("%d", &m);
    int blockSize[m];
    for (int i = 0; i < m; i++) {
        printf("Enter size of block %d: ", i + 1);
        scanf("%d", &blockSize[i]);
    }

    // Input number of processes
    printf("\nEnter the number of processes: ");
    scanf("%d", &n);
    int processSize[n];
    for (int i = 0; i < n; i++) {
        printf("Enter size of process %d: ", i + 1);
        scanf("%d", &processSize[i]);
    }

    // Call Worst Fit allocation
    worstFit(blockSize, m, processSize, n);

    return 0;
}
Enter the number of memory blocks: 5
Enter size of block 1: 100
Enter size of block 2: 500
Enter size of block 3: 200
Enter size of block 4: 300
Enter size of block 5: 600

Enter the number of processes: 4
Enter size of process 1: 212
Enter size of process 2: 417
Enter size of process 3: 112
Enter size of process 4: 426
--- Worst Fit Allocation Result ---
Process No.	Process Size	Block No.
1		212		5
2		417		2
3		112		5
4		426		Not Allocated
