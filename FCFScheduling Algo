#include <stdio.h>

typedef struct {
    int id;
    int arrival;
    int burst;
    int completion;
    int waiting;
    int turnaround;
} Process;

int main() {
    int n;
    printf("Enter number of processes: ");
    scanf("%d", &n);    
    Process processes[n];
    // Input process details
    for (int i = 0; i < n; i++) {
        processes[i].id = i;
        printf("Enter arrival time for process %d: ", i);
        scanf("%d", &processes[i].arrival);
        printf("Enter burst time for process %d: ", i);
        scanf("%d", &processes[i].burst);
    }
    // Sort processes by arrival time (stable bubble sort)
    for (int i = 0; i < n-1; i++) {
        for (int j = 0; j < n-i-1; j++) {
            if (processes[j].arrival > processes[j+1].arrival) {
                Process temp = processes[j];
                processes[j] = processes[j+1];
                processes[j+1] = temp;
            }
        }
    }
    int current_time = 0;
    float total_waiting = 0, total_turnaround = 0;    
    // Calculate completion, turnaround, and waiting times
    for (int i = 0; i < n; i++) {
        if (current_time < processes[i].arrival) {
            current_time = processes[i].arrival;
        }
        processes[i].completion = current_time + processes[i].burst;
        processes[i].turnaround = processes[i].completion - processes[i].arrival;
        processes[i].waiting = processes[i].turnaround - processes[i].burst;        
        current_time = processes[i].completion;
        total_waiting += processes[i].waiting;
        total_turnaround += processes[i].turnaround;
    }    
    // Print results
    printf("\nProcess | Arrival Time | Burst Time | Completion Time | Waiting Time | Turnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("%7d | %12d | %10d | %15d | %12d | %15d\n", 
               processes[i].id,
               processes[i].arrival,
               processes[i].burst,
               processes[i].completion,
               processes[i].waiting,
               processes[i].turnaround);
    }    
    printf("\nAverage Waiting Time: %.2f\n", total_waiting / n);
    printf("Average Turnaround Time: %.2f\n", total_turnaround / n);    
    return 0;
}

Output:
Enter number of processes: 3
Enter arrival time for process 0: 0
Enter burst time for process 0: 5
Enter arrival time for process 1: 1
Enter burst time for process 1: 3
Enter arrival time for process 2: 2
Enter burst time for process 2: 8

Process | Arrival Time | Burst Time | Completion Time | Waiting Time | Turnaround Time
      0 |            0 |          5 |               5 |            0 |               5
      1 |            1 |          3 |               8 |            4 |               7
      2 |            2 |          8 |              16 |            6 |              14

Average Waiting Time: 3.33
Average Turnaround Time: 8.67
