#include <stdio.h> 
 
// Semaphore variables 
int mutex = 1;      // Binary semaphore for mutual exclusion 
int full = 0;       // Counting semaphore for full slots 
int empty = 5;      // Counting semaphore for empty slots 
int x = 0;          // Item counter 
 
// Wait operation 
void wait(int *s)  
{ 
    (*s)--; 
} 
 
// Signal operation 
void signal(int *s)  
{ 
    (*s)++; 
} 
 
void producer()  
{ 
    // Check if buffer has space 
    if (empty == 0) { 
        printf("Buffer is full!\n"); 
        return; 
    } 
 
    wait(&mutex);       // Enter critical section 
     
    // Produce item 
    x++; 
    printf("Producer produces item %d\n", x); 
     
    signal(&full);      // Increment full count 
    wait(&empty);       // Decrement empty count 
     
    signal(&mutex);     // Exit critical section 
} 
 
void consumer()  
{ 
    // Check if buffer has items 
    if (full == 0) { 
        printf("Buffer is empty!\n"); 
        return; 
    } 
 
    wait(&mutex);       // Enter critical section 
     
    // Consume item 
    printf("Consumer consumed item %d\n", x); 
    x--; 
    signal(&empty);     // Increment empty count 
    wait(&full);        // Decrement full count 
     
    signal(&mutex);     // Exit critical section 
} 
 
int main()  
{ 
    int choice; 
     
    printf("\n1. Producer\n2. Consumer\n3. Exit\n"); 
     
    while (1)  
    { 
        printf("\nEnter your choice: "); 
        scanf("%d", &choice); 
         
        switch (choice)  
        { 
            case 1: 
                if (mutex == 1 && empty != 0) 
                    producer(); 
                else 
                    printf("Buffer is full!\n"); 
                break; 
            case 2: 
                if (mutex == 1 && full != 0) 
                    consumer(); 
                else 
                    printf("Buffer is empty!\n"); 
                break; 
            case 3: 
                return 0; 
            default: 
                printf("Invalid choice!\n"); 
        } 
    } 
}  

Output:
1. Producer
2. Consumer
3. Exit

Enter your choice: 1
Producer produces item 1

Enter your choice: 1
Producer produces item 2

Enter your choice: 1
Producer produces item 3

Enter your choice: 1
Producer produces item 4

Enter your choice: 1
Producer produces item 5

Enter your choice: 1
Buffer is full!

Enter your choice: 2
Consumer consumed item 5

Enter your choice: 2
Consumer consumed item 4

Enter your choice: 2
Consumer consumed item 3

Enter your choice: 2
Consumer consumed item 2

Enter your choice: 2
Consumer consumed item 1

Enter your choice: 2
Buffer is empty!

Enter your choice: 3
