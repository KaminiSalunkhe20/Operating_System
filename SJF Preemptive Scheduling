 #include <stdio.h>
#include <stdbool.h>

typedef struct {
    char pid[5];
    int at, bt, rt, ct, tat, wt;
    bool completed;
} Process;

void sjfPreemptive(Process p[], int n) {
    int completed = 0, currentTime = 0;
    float totalTAT = 0, totalWT = 0;
    int lastProcess = -1;

    for (int i = 0; i < n; i++) {
        p[i].rt = p[i].bt;
        p[i].completed = false;
    }

    while (completed < n) {
        int idx = -1, minRT = 1e9;
        for (int i = 0; i < n; i++) {
            if (!p[i].completed && p[i].at <= currentTime && p[i].rt < minRT && p[i].rt > 0) {
                minRT = p[i].rt;
                idx = i;
            }
        }

        if (idx != -1) {
            p[idx].rt--;
            currentTime++;

            if (p[idx].rt == 0) {
                p[idx].ct = currentTime;
                p[idx].tat = p[idx].ct - p[idx].at;
                p[idx].wt = p[idx].tat - p[idx].bt;
                p[idx].completed = true;
                completed++;
            }
        } else {
            currentTime++;
        }
    }

    printf("\nPID\tAT\tBT\tCT\tTAT\tWT\n");
    for (int i = 0; i < n; i++) {
        totalTAT += p[i].tat;
        totalWT += p[i].wt;
        printf("%s\t%d\t%d\t%d\t%d\t%d\n", p[i].pid, p[i].at, p[i].bt, p[i].ct, p[i].tat, p[i].wt);
    }

    printf("\nAverage TAT = %.2f", totalTAT / n);
    printf("\nAverage WT = %.2f\n", totalWT / n);
}

int main() {
    int n;
    printf("Enter number of processes: ");
    scanf("%d", &n);
    Process p[n];

    for (int i = 0; i < n; i++) {
        printf("Enter Process ID, Arrival Time, Burst Time for process %d: ", i+1);
        scanf("%s %d %d", p[i].pid, &p[i].at, &p[i].bt);
    }

    sjfPreemptive(p, n);
    return 0;
}

Enter number of processes: 3
P1 0 8
P2 1 4
P3 2 9
PID	AT	BT	CT	TAT	WT
P1	0	8	17	17	9
P2	1	4	5	4	0
P3	2	9	26	24	15

Average TAT = 15.00
Average WT = 8.00

